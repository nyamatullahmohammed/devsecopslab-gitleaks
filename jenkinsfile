pipeline {
    agent {
        label 'nyamat-security-agent'
    }

    environment {
        VAULT_ADDR = 'http://34.228.140.38:8400/'
    }

    stages {
        stage('Cleanup') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('GitLeaks Scan') {
            steps {
                sh '''#!/bin/bash
                    set -eux
                    # Install gitleaks if not present
                    if ! command -v gitleaks &> /dev/null; then
                        echo "Installing Gitleaks..."
                        wget https://github.com/zricethezav/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_linux_x64.tar.gz
                        tar -xzf gitleaks_8.18.1_linux_x64.tar.gz
                        chmod +x gitleaks
                        sudo mv gitleaks /usr/local/bin/
                    fi
                    
                    # Run gitleaks detect even if from non commited codes
                    exit_code=0
                    gitleaks detect --source . --no-git --verbose --report-path gitleaks-report.json || exit_code=$?
                    echo $exit_code
                    set -e
                    if [ "$exit_code" -ne 0 ]; then
                        echo "❌ Gitleaks found leaks (exit code $exit_code)"
                        exit 1
                    else
                        echo "✅ No leaks found."
                    fi
                    '''
            }
        }
        stage('Fetch Secret from Vault') {
            steps {
                script {
                    withVault([vaultSecrets: [
                        [path: 'secret/app_secret', secretValues: [[envVar: 'APP1', vaultKey: 'app1']
                        ]]
                    ]]) {
                    sh '''
                    docker build -t flask-vault-app .
                    docker run -d -p 8005:5000 -e API_KEY=$APP1 flask-vault-app
                    '''
                    }
                }
            }
        }
        
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}